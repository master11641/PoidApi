#pragma checksum "I:\Asp.net Core Projects\Barnama\Views\Question\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "697437720c452994626959519e824c8a10333f11"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Question_Index), @"mvc.1.0.view", @"/Views/Question/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "I:\Asp.net Core Projects\Barnama\Views\_ViewImports.cshtml"
using Barnama;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "I:\Asp.net Core Projects\Barnama\Views\_ViewImports.cshtml"
using Barnama.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"697437720c452994626959519e824c8a10333f11", @"/Views/Question/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fa6443989dff877cf3bb82482603cd54cef33c9a", @"/Views/_ViewImports.cshtml")]
    public class Views_Question_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<Barnama.Models.Question>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "I:\Asp.net Core Projects\Barnama\Views\Question\Index.cshtml"
  
    ViewData["Title"] = "سوالات";

#line default
#line hidden
#nullable disable
            DefineSection("contentheader", async() => {
                WriteLiteral(@"
<div class=""content-header"">
    <div class=""container-fluid"">
        <div class=""row mb-2"">
            <div class=""col-sm-6"">
                <h1 class=""m-0 text-dark"">سوالات</h1>
            </div><!-- /.col -->
            <div class=""col-sm-6"">
                <ol class=""breadcrumb float-sm-left"">
                    <li class=""breadcrumb-item""><a");
                BeginWriteAttribute("href", " href=\'", 478, "\'", 512, 1);
#nullable restore
#line 15 "I:\Asp.net Core Projects\Barnama\Views\Question\Index.cshtml"
WriteAttributeValue("", 485, Url.Action("Index","Home"), 485, 27, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(">خانه</a></li>\r\n                    <li class=\"breadcrumb-item active\">سوالات</li>\r\n                </ol>\r\n            </div><!-- /.col -->\r\n        </div><!-- /.row -->\r\n    </div><!-- /.container-fluid -->\r\n</div>\r\n");
            }
            );
            WriteLiteral("\r\n\r\n\r\n\r\n<!--نحوه‌ی راست به چپ سازی گرید-->\r\n<div class=\"k-rtl\">\r\n    <div id=\"report-grid\"></div>\r\n</div>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n<script type=\"text/javascript\">\r\n    $(function () {\r\n        var productsDataSource = new kendo.data.DataSource({\r\n            transport: {\r\n                read: {\r\n                    url: \"");
#nullable restore
#line 37 "I:\Asp.net Core Projects\Barnama\Views\Question\Index.cshtml"
                     Write(Url.Action("GetQuestions", "Question"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                    dataType: ""json"",
                    contentType: 'application/json; charset=utf-8',
                    type: 'GET'
                },
                parameterMap: function (options) {
                    return kendo.stringify(options);
                }
            },
            update: {
                url: "" ");
#nullable restore
#line 47 "I:\Asp.net Core Projects\Barnama\Views\Question\Index.cshtml"
                  Write(Url.Action("Update", "Question"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                type: ""POST""
            },
            schema: {
                data: ""data"",
                total: ""total"",
                model: {
                    fields: {
                        ""id"": { type: ""number"" }, //تعیین نوع فیلد برای جستجوی پویا مهم است
                        ""title"": { type: ""string"" },
                        ""lesson.field.title"": { type: ""string"" },
                        ""lesson.title"": { type: ""string"" },
                        ""imageSrc"": { type: ""string"" },
                    }
                }
            },
            error: function (e) {
                alert(e.errorThrown);
            },
            pageSize: 10,
            sort: { field: ""id"", dir: ""desc"" },
            group: [{ field: ""lesson.field.title"", title: ""رشته"" }, { field: ""lesson.title"" }],
            serverPaging: true,
            serverFiltering: true,
            serverSorting: true
        });

        $(""#report-grid"").kendoGrid({
            toolbar: ");
                WriteLiteral(@"[""create"", ""save"", ""cancel""],
            dataSource: productsDataSource,
            autoBind: true,
            scrollable: false,
            pageable: true,
            sortable: true,
            filterable: true,
            groupable: true,
            reorderable: true,
            columnMenu: true,
            editable: { mode: ""popup"" },
            detailInit: detailInit,
            dataBound: function () {
                this.expandRow(this.tbody.find(""tr.k-master-row"").first());
            },
            columns: [
                { field: ""id"", title: ""شماره"", width: ""130px"" },
                {
                    field: ""imageSrc"", title: ""تصویر"", width: ""130px"",
                    template: kendo.template($(""#imageTemplate"").html()),
                },
                { field: ""title"", title: ""عنوان"", width: ""200px"" },
                { field: ""lesson.field.title"", title: ""رشته"", width: ""200px"" },
                { field: ""lesson.title"", title: ""درس"" },
           ");
                WriteLiteral(@"     {
                    field: ""id"", title: ""عملیات"",
                    template: '<a  href=""/Question/edit/#=id#"" class=""k-button fa fa-edit tjax "" popup=""true"" >ویرایش</a>  <a  href=""/Question/delete/#=id#"" class=""k-button fa fa-remove tjax "" popup=""true"" >حذف</a>  <a  href=""/answer/create"" class=""k-button fa fa-reply tjax"" popup=""true"" >پاسخ جدید</a> '
                },


            ],
            toolbar: [
                    { template: kendo.template($(""#toolbarTemplate"").html()) }
                ]
        });



        function detailInit(e) {
            $(""<div/>"").appendTo(e.detailCell).kendoGrid({
                dataSource: {
                    transport: {
                        read: {
                            url: """);
#nullable restore
#line 118 "I:\Asp.net Core Projects\Barnama\Views\Question\Index.cshtml"
                             Write(Url.Action("GetAnswers", "Answer"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                            dataType: ""json"",
                            contentType: 'application/json; charset=utf-8',
                            type: 'GET'
                        },
                        parameterMap: function (options) {
                            return kendo.stringify(options);
                        }
                    },
                    schema: {
                        data: ""data"",
                        total: ""total"",
                        model: {
                            fields: {
                                ""id"": { type: ""number"" }, //تعیین نوع فیلد برای جستجوی پویا مهم است
                                ""title"": { type: ""string"" },

                            }
                        }
                    },
                    error: function (e) {
                        alert(e.errorThrown);
                    },
                    pageSize: 10,
                    sort: { field: ""id"", dir: ""desc"" },
                 ");
                WriteLiteral(@"   serverPaging: true,
                    filter: { field: ""QuestionId"", operator: ""eq"", value: e.data.id },
                    serverFiltering: true,
                    serverSorting: true
                },
                autoBind: true,
                scrollable: false,
                sortable: true,
                pageable: true,
                columns: [
                    { field: ""id"", width: ""110px"" },
                    { field: ""title"", title: ""عنوان"", width: ""110px"" },
                    {
                        field: ""imageSrc"", title: ""تصویر"", width: ""130px"",
                        template: kendo.template($(""#imageTemplate"").html()),
                    },
                    {
                        field: ""id"", title: ""عملیات"",
                        template: '<a  href=""/answer/edit/#=id#"" class=""k-button fa fa-edit tjax"" popup=""true"" >ویرایش</a>  <a  href=""/answer/delete/#=id#"" class=""k-button fa fa-remove tjax""  popup=""true"">حذف</a>   '
                   ");
                WriteLiteral(@" }

                ]
            });
        }
    });
    // Fill modal with content from link href

    function completeHandler(sender, response) {
        $('#tjaxModal').modal('hide');
        $(""#report-grid"").data(""kendoGrid"").dataSource.read();
        //productsDataSource.read();
    }

</script>
<script id=""toolbarTemplate"" type=""text/x-kendo-template"">
          <a href=""/question/create/#=id#"" class=""k-button fa fa-add tjax"" popup=""true"">سوال جدید</a>
    </script>
<script type=""text/x-kendo-template"" id=""imageTemplate"">
        #if( imageSrc != null ) {#       
        <img style=""width:80px;"" src=""/uploads/#=imageSrc#"" class=""img img-thumbnail"" />
        #} else {#
       <img style=""width:80px;"" src=""/assets/images/noimage.png"" class=""img img-thumbnail"" />
        #}#
    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<Barnama.Models.Question>> Html { get; private set; }
    }
}
#pragma warning restore 1591
